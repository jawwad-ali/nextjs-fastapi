services:
  web:
    build:
      context: .
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - /app/node_modules

  backend:
    build:
      context: ./api/todo
    volumes:
      - ./api/todo:/code
      - /api/todo/pyproject.toml
    ports: 
      - 4499:8000
    environment:
      DATABASE_URL: "postgresql://alijawwad001:o7ApVljPtEI6@ep-fancy-limit-a5emb5bv.us-east-2.aws.neon.tech/practice?sslmode=require" # Example environment variable, adjust as needed
      
      # Kafka Bootstrap Server
      BOOTSTRAP_SERVER: "broker:19092"

      #TOPIC For Todo
      KAFKA_TODO_TOPIC: "nextasproducer"

      #CONSUKMER GRPOUP For TODO
      KAFKA_CONSUMER_GROUP_ID_FOR_TODO: "todo"

      # Gemini APIKEY
      Gemini_API_KEY: "AIzaSyDfXtCeV_pi0QIpD1mOY5NqR0VwME3-zx0"
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  
networks:
  default:
    driver: bridge